<?xml version="1.0" encoding="UTF-8" ?>
<class name="PathStaticBody3D" inherits="StaticBody3D" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		PathStaticBody3D creats a static physics body by duplicating the input shape along a [Path3D].
	</brief_description>
	<description>
		This node takes the input shape and duplicates it along a [Path3D] with specified parameters.  It is meant to quickly create simple static physics geometry along a path, such as fences, walls, or roads.  The shape can be transformed to be relative to the path node or local to the PathStaticBody3D node.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="bake_static_body">
			<return type="StaticBody3D" />
			<description>
				Returns a [StaticBody3D] with the same geometry generated by this node.
			</description>
		</method>
		<method name="queue_rebuild">
			<return type="void" />
			<description>
				Queues a rebuild of the static body. This method is called automatically when the path or shape is changed.
			</description>
		</method>
	</methods>
	<members>
		<member name="alignment" type="int" setter="set_alignment" getter="get_alignment" enum="PathStaticBody3D.Alignment" default="0">
			Determines how to align the shapes along the path.
			See [enum Alignment] for more information.
		</member>
		<member name="count" type="int" setter="set_count" getter="get_count" default="1">
			When [member distribution] is set to [constant DISTRIBUTE_BY_COUNT], this value determines how many shapes will be created along the path.
		</member>
		<member name="distance" type="float" setter="set_distance" getter="get_distance">
			When [member distribution] is set to [constant DISTRIBUTE_BY_DISTANCE], this value determines the distance between each shape along the path.
		</member>
		<member name="distribution" type="int" setter="set_distribution" getter="get_distribution" enum="PathStaticBody3D.Distribution" default="0">
			Determines how the shapes are distributed along the path.
			See [enum Distribution] for more information.
		</member>
		<member name="path_3d" type="Path3D" setter="set_path_3d" getter="get_path_3d">
			The path to duplicate the shape along.
		</member>
		<member name="rotation" type="Vector3" setter="set_rotation" getter="get_rotation" default="Vector3(0, 0, 0)">
			Determines the rotation of the shape along the path.
		</member>
		<member name="rotation_mode" type="int" setter="set_rotation_mode" getter="get_rotation_mode" enum="PathStaticBody3D.Rotation" default="0">
			Determines how the rotation is applied to the shape along the path.
			See [enum Rotation] for more information.
		</member>
		<member name="sample_cubic" type="bool" setter="set_sample_cubic" getter="get_sample_cubic" default="false">
			When true, the path will be sampled using cubic interpolation, which can provide smoother results for curved paths.
		</member>
		<member name="shape" type="Shape3D" setter="set_shape" getter="get_shape">
			The collision shape resource to duplicate along the path.
		</member>
		<member name="shape_transform" type="int" setter="set_shape_transform" getter="get_shape_transform" enum="PathStaticBody3D.RelativeTransform" default="0">
			Determines how the shapes will be transformed relative to this node or the path node.
			See [enum RelativeTransform] for more information.
		</member>
	</members>
	<signals>
		<signal name="curve_changed">
			<description>
				Emitted when the path is changed.
			</description>
		</signal>
		<signal name="shape_changed">
			<description>
				Emitted when the shape is changed.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="TRANSFORM_SHAPE_LOCAL" value="0" enum="RelativeTransform">
			When [member shape_transform] is set to this value, the shape will be transformed to match to this node's transform.
		</constant>
		<constant name="TRANSFORM_SHAPE_PATH_NODE" value="1" enum="RelativeTransform">
			When [member shape_transform] is set to this value, the shape will be transformed to match to the path node's transform.
		</constant>
		<constant name="DISTRIBUTE_BY_COUNT" value="0" enum="Distribution">
			When [member distribution] is set to this value, the shapes will be spaced evenly based on the [member count].
		</constant>
		<constant name="DISTRIBUTE_BY_DISTANCE" value="1" enum="Distribution">
			When [member distribution] is set to this value, the shapes will be spaced [member distance] apart.
		</constant>
		<constant name="ALIGN_FROM_START" value="0" enum="Alignment">
			When [member alignment] is set to this value, the shapes will be aligned from the start of the path.
		</constant>
		<constant name="ALIGN_CENTERED" value="1" enum="Alignment">
			When [member alignment] is set to this value, the shapes will be centered on the path.
		</constant>
		<constant name="ALIGN_FROM_END" value="2" enum="Alignment">
			When [member alignment] is set to this value, the shapes will be aligned from the end of the path.
		</constant>
		<constant name="ROTATE_FIXED" value="0" enum="Rotation">
			When [member rotation_mode] is set to this value, the shape will be rotated by [member rotation] relative to this node's rotation.
		</constant>
		<constant name="ROTATE_PATH" value="1" enum="Rotation">
			When [member rotation_mode] is set to this value, the shape will be rotated by [member rotation] relative to the path's tangent.
		</constant>
	</constants>
</class>

<?xml version="1.0" encoding="UTF-8" ?>
<class name="PathExtrude3D" inherits="GeometryInstance3D" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		The PathExtrude3D node allows for the extrusion of a 2D shape along a 3D path, creating a 3D mesh. This is useful for creating complex 3D shapes from simpler 2D profiles.
	</brief_description>
	<description>
		The PathExtrude3D node is used to create a 3D mesh by extruding a 2D shape along a 3D path. 
		This can be useful for creating simple 3D models such as pipes, cables, or any other object that follows has a uniform cross section along specific path in 3D space.
		The cross section of the extruded object is determined by a [PathExtrudeProfileBase] object in [param profile].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="create_convex_collision">
			<return type="void" />
			<param index="0" name="clean" type="bool" default="true" />
			<param index="1" name="simplify" type="bool" default="false" />
			<description>
				This helper creates a StaticBody3D child node with a ConvexPolygonShape3D collision shape calculated from the extruded mesh geometry. It's mainly used for testing.

				If [param clean] is [code]true[/code], duplicate and interior vertices are removed automatically. You can set it to false to make the process faster if not needed.

				If [param simplify] is [code]true[/code], the geometry can be further simplified to reduce the number of vertices. Disabled by default.
			</description>
		</method>
		<method name="create_multiple_convex_collision">
			<return type="void" />
			<param index="0" name="settings" type="MeshConvexDecompositionSettings" default="null" />
			<description>
				This helper creates a StaticBody3D child node with multiple ConvexPolygonShape3D collision shapes calculated from the extrueded mesh geometry via convex decomposition. The convex decomposition operation can be controlled with parameters from the optional settings.
			</description>
		</method>
		<method name="create_trimesh_collision">
			<return type="void" />
			<description>
				This helper creates a StaticBody3D child node with a ConcavePolygonShape3D collision shape calculated from the extruded mesh geometry. It's mainly used for testing.
			</description>
		</method>
		<method name="get_baked_mesh" qualifiers="const">
			<return type="ArrayMesh" />
			<description>
				Returns the baked mesh that is generated from the extrusion.
			</description>
		</method>
		<method name="queue_rebuild">
			<return type="void" />
			<description>
				Rebuilds the extrusion mesh. This method is called automatically when the PathExtrude3D node is modified, but it can be called manually to force an update.
			</description>
		</method>
	</methods>
	<members>
		<member name="collision_mode" type="int" setter="set_generate_collision" getter="get_generate_collision" enum="PathExtrude3D.CollisionMode" default="0">
			The automatic collision generation mode for the extrusion. This can be one of the following values:
			See [enum CollisionMode] for more information.

			NOTE: Collision generation is expensive and should only be used for simple shapes that need to have updated collision data in real time.  For static objects, it's recommended to use the [method create_trimesh_collision], [method create_convex_collision], or [method create_multiple_convex_collision] methods instead.
		</member>
		<member name="convex_collision_clean" type="bool" setter="set_convex_collision_clean" getter="get_convex_collision_clean">
			If [member collision_mode] is set to [constant COLLISION_MODE_CONVEX], this property determines whether to remove duplicate and interior vertices from the generated convex collision shape. This can improve performance but may slightly alter the shape.
		</member>
		<member name="convex_collision_simplify" type="bool" setter="set_convex_collision_simplify" getter="get_convex_collision_simplify">
			If [member collision_mode] is set to [constant COLLISION_MODE_CONVEX], this property determines whether to simplify the generated convex collision shape to reduce the number of vertices. This can improve performance but may slightly alter the shape.
		</member>
		<member name="end_cap_mode" type="int" setter="set_end_cap_mode" getter="get_end_cap_mode" enum="PathExtrude3D.EndCaps" is_bitfield="true" default="3">
			The end cap mode for the extrusion. This can be one of the following values:
			See [enum EndCaps] for more information.
		</member>
		<member name="material" type="Material" setter="set_material" getter="get_material">
			The material used for the extrusion.  Similar to [CSGPolygon3D], the bttom left of the texture is applied to the starting end cap, and the bottom right of the texture is applied to the end cap.  The top half of the texture is applied to the extruded profile, with U increasing along the path length.
		</member>
		<member name="mesh_transform" type="int" setter="set_mesh_transform" getter="get_mesh_transform" enum="PathExtrude3D.RelativeTransform" default="0">
			Sets the overall transform of the generated mesh to either follow the PathExtrude3D node's transform or the transform of the Path3D node.
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset" default="Vector2(0, 0)">
			A spatial offset in the X any Y direction along the path.
		</member>
		<member name="offset_angle" type="float" setter="set_offset_angle" getter="get_offset_angle" default="0.0">
			The angle to rotate the cross-section around the path's tangeant.
		</member>
		<member name="path_3d" type="Path3D" setter="set_path_3d" getter="get_path_3d">
			The 3D path along which the cross-section is extruded.
		</member>
		<member name="profile" type="PathExtrudeProfileBase" setter="set_profile" getter="get_profile">
			The 2D profile to extrude along the path.
		</member>
		<member name="sample_cubic" type="bool" setter="set_sample_cubic" getter="get_sample_cubic" default="false">
			If [code]true[/code], the cross-section is sampled using cubic interpolation. If [code]false[/code], the cross-section is sampled using linear interpolation.
		</member>
		<member name="tessellation_max_stages" type="int" setter="set_tessellation_max_stages" getter="get_tessellation_max_stages" default="5">
			The maximum number of tessellation stages used for the extrusion.
		</member>
		<member name="tessellation_tolerance_degrees" type="float" setter="set_tessellation_tolerance_degrees" getter="get_tessellation_tolerance_degrees" default="4.0">
			The maximum angle in degrees between two adjacent segments before a new tessellation stage is added.
		</member>
		<member name="tilt" type="bool" setter="set_tilt" getter="get_tilt" default="true">
			If [code]true[/code], the cross-section is rotated to follow the path's rotation and tilt.
		</member>
		<member name="triangle_count" type="int" setter="" getter="get_triangle_count" default="0">
			A read-only property that represents the number of triangles generated in the extrusion.
		</member>
	</members>
	<signals>
		<signal name="curve_changed">
			<description>
				Emitted when the curve in the [member path_3d] property changes.
			</description>
		</signal>
		<signal name="profile_changed">
			<description>
				Emitted when the profile in the [member profile] property changes.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="TRANSFORM_MESH_LOCAL" value="0" enum="RelativeTransform">
			When [member mesh_transform] is set to this value, the mesh is transformed using the PathExtrude3D node's transform.
		</constant>
		<constant name="TRANSFORM_MESH_PATH_NODE" value="1" enum="RelativeTransform">
			When [member mesh_transform] is set to this value, the mesh is transformed using the Path3D node's transform.
		</constant>
		<constant name="COLLISION_MODE_NONE" value="0" enum="CollisionMode">
			When [member collision_mode] is set to this value, no collision is automatically generated.  [method create_trimesh_collision], [method create_convex_collision], or [method create_multiple_convex_collision] can be used to manually generate collision.
		</constant>
		<constant name="COLLISION_MODE_TRIMESH" value="1" enum="CollisionMode">
			When [member collision_mode] is set to this value, a ConcavePolygonShape3D collision shape is generated.
		</constant>
		<constant name="COLLISION_MODE_CONVEX" value="2" enum="CollisionMode">
			When [member collision_mode] is set to this value, a ConvexPolygonShape3D collision shape is generated.
		</constant>
		<constant name="COLLISION_MODE_MULTIPLE_CONVEX" value="3" enum="CollisionMode">
			When [member collision_mode] is set to this value, multiple ConvexPolygonShape3D collision shapes are generated using convex decomposition.
		</constant>
		<constant name="END_CAPS_NONE" value="0" enum="EndCaps" is_bitfield="true">
			When [member end_cap_mode] is set to this value, no end caps are created.
		</constant>
		<constant name="END_CAPS_START" value="1" enum="EndCaps" is_bitfield="true">
			When [member end_cap_mode] is set to this value, an end cap is created at the start of the extrusion.
		</constant>
		<constant name="END_CAPS_END" value="2" enum="EndCaps" is_bitfield="true">
			When [member end_cap_mode] is set to this value, an end cap is created at the end of the extrusion.
		</constant>
		<constant name="END_CAPS_BOTH" value="3" enum="EndCaps" is_bitfield="true">
			When [member end_cap_mode] is set to this value, end caps are created at both the start and end of the extrusion.
		</constant>
	</constants>
</class>
